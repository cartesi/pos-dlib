{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_winner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_roundCount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_roundDuration",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_difficulty",
          "type": "uint256"
        }
      ],
      "name": "RoundClaimed",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_weight",
          "type": "uint256"
        }
      ],
      "name": "canWin",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_weight",
          "type": "uint256"
        }
      ],
      "name": "claimRound",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "currentIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "deactivate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "getMicrosecondsSinceLastDraw",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "getNonce",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "currentNonce",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "getState",
      "outputs": [
        {
          "internalType": "uint256[5]",
          "name": "_uintValues",
          "type": "uint256[5]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "getSubInstances",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "_addresses",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_indices",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_minDifficulty",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_initialDifficulty",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_difficultyAdjustmentParameter",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_desiredDrawTimeInterval",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_posManagerAddress",
          "type": "address"
        }
      ],
      "name": "instantiate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "isActive",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isConcerned",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_num",
          "type": "uint256"
        }
      ],
      "name": "log2ApproxTimes1M",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "receipt": {
    "to": null,
    "from": "0x18930e8a66a1DbE21D00581216789AAB7460Afd0",
    "contractAddress": "0x16Fad52E1D2D7c5228cAfe7D290A82199404243B",
    "transactionIndex": 9,
    "gasUsed": "3420562",
    "logsBloom": "0x
    "blockHash": "0x2326d50ceb20163b5d6f0c9b3768f880c74134d1b38043f634f02617ece6be61",
    "transactionHash": "0xe16de0d93d828e8257a4e5bf8ca27dadc883fffff2c81c1ea490a49f6c80ee16",
    "logs": [],
    "blockNumber": 7368934,
    "cumulativeGasUsed": "4094627",
    "status": 1,
    "byzantium": true
  },
  "address": "0x16Fad52E1D2D7c5228cAfe7D290A82199404243B",
  "args": [],
  "solcInputHash": "0xb592c5c2c0725155a492042e978259083b2945962448698a64b8a2497b9bdf75",
  "metadata": "{\"compiler\":{\"version\":\"0.7.1+commit.f4a555be\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_winner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_roundCount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_roundDuration\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_difficulty\",\"type\":\"uint256\"}],\"name\":\"RoundClaimed\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_weight\",\"type\":\"uint256\"}],\"name\":\"canWin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_weight\",\"type\":\"uint256\"}],\"name\":\"claimRound\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"deactivate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"getMicrosecondsSinceLastDraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"getNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getState\",\"outputs\":[{\"internalType\":\"uint256[5]\",\"name\":\"_uintValues\",\"type\":\"uint256[5]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"getSubInstances\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"_addresses\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_indices\",\"type\":\"uint256[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_minDifficulty\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_initialDifficulty\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_difficultyAdjustmentParameter\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_desiredDrawTimeInterval\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_posManagerAddress\",\"type\":\"address\"}],\"name\":\"instantiate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"isActive\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isConcerned\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_num\",\"type\":\"uint256\"}],\"name\":\"log2ApproxTimes1M\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"canWin(uint256,address,uint256)\":{\"params\":{\"_index\":\"the index of the instance of lottery you want to interact with\",\"_user\":\"the address that is gonna get checked\",\"_weight\":\"number that will weight the random number, most likely will be the number of staked tokens\"}},\"claimRound(uint256,address,uint256)\":{\"params\":{\"_index\":\"the index of the instance of lottery you want to interact with\",\"_user\":\"address that will win the lottery\",\"_weight\":\"number that will weight the random number, most likely will be the number of staked tokens\"}},\"getMicrosecondsSinceLastDraw(uint256)\":{\"params\":{\"_index\":\"the index of the instance of lottery to be interact with\"},\"returns\":{\"_0\":\"microseconds passed since last draw started\"}},\"instantiate(uint256,uint256,uint256,uint256,address)\":{\"params\":{\"_desiredDrawTimeInterval\":\"how often we want to elect a winner\",\"_difficultyAdjustmentParameter\":\"how quickly the difficulty gets updated according to the difference between time passed and desired draw time interval.\",\"_initialDifficulty\":\"starting difficulty\",\"_minDifficulty\":\"lower bound for difficulty parameter\",\"_posManagerAddress\":\"address of ProofOfStake that will use this instance\"}},\"log2ApproxTimes1M(uint256)\":{\"params\":{\"_num\":\"number to take log2 * 1M of\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"canWin(uint256,address,uint256)\":{\"notice\":\"Check if address can win current round\"},\"claimRound(uint256,address,uint256)\":{\"notice\":\"Claim that _user won the round\"},\"getMicrosecondsSinceLastDraw(uint256)\":{\"notice\":\"Returns time since last draw started, in microseconds\"},\"instantiate(uint256,uint256,uint256,uint256,address)\":{\"notice\":\"Instantiates a Speed Bump structure\"},\"log2ApproxTimes1M(uint256)\":{\"notice\":\"Approximates log2 * 1M\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Lottery.sol\":\"Lottery\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@cartesi/util/contracts/CartesiMath.sol\":{\"keccak256\":\"0xf9ddc9ce77c6c88dc2b8abb77af1c272ef63d9a6458c5c9fb3a72b5a11db34a6\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://38b2328075846f717254d76f2fd7ad3b4c5314eab01b43ce047c3f593f973fb5\",\"dweb:/ipfs/QmXWyBxPvMV5pB35gAn9sXNxwEWBdzAMdFB6vSKSFqqcZT\"]},\"@cartesi/util/contracts/Decorated.sol\":{\"keccak256\":\"0xdbba019b8f7f93b212a5bbae402ee988321c4fa82ed2b4c9e55b4d7ddf35dcc3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://1ea2f5314f32ab1924a60163504f20251e19d63bbd0ad5909e073045a69dd36a\",\"dweb:/ipfs/QmSa35hQzj3P9cZ9S9fWBFE5tvQdMcaqaN7u9Wvk26pYVy\"]},\"@cartesi/util/contracts/Instantiator.sol\":{\"keccak256\":\"0x084e3e769f423b3f32bd8faf119be132a478eeea8006bed69b527b2fdcfd45a1\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://8fac8ef267f04db45cee44bc958d902b5fd863da76f64190d13c1dd77a5277f8\",\"dweb:/ipfs/QmUv1QJxcB7Zg4PpmJ4YTkgk4TUac6WGnRvzGZ4VrFCTRi\"]},\"@cartesi/util/contracts/InstantiatorImpl.sol\":{\"keccak256\":\"0xc1db237a28042f74224ae2d4398616fb670ce87709ffd8505c142cddedee6954\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://13c9c035373b26e8c60f897a2823367a2fec9e888060dcd100f3940f884638ed\",\"dweb:/ipfs/QmdmG6UsWSdh4kDJQ122N3W42ktUEjWW59xn91gGn2kfJc\"]},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xba96bc371ba999f452985a98717cca1e4c4abb598dc038a9a9c3db08129b1ba4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26e50e3f7b6482fb6f598f2e006994a74aa492687daa4b3eee7fd4fb5398ce7f\",\"dweb:/ipfs/QmZudqoPSkA4USLMFsBBmt19dDPZFS8aaAmL5R7pECXu6t\"]},\"contracts/Lottery.sol\":{\"keccak256\":\"0xcf1c097034ed507d67119a2b11b8f4be6f970b96db4929ff44bf4a2de21d7bcc\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://907928ac277b1aa0e6f623f5faa0dd4caffa38d801202a585baf5987bec207c6\",\"dweb:/ipfs/QmXV83yfDXCwAS7z14iGpc4zwjFYER8qshXLRYg6ujpuP3\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100b45760003560e01c806382afd23b1161007157806382afd23b146101f8578063916b9bef14610215578063c526656c14610234578063de76c5b9146102f9578063e3581b6814610316578063f0d2a38c14610333576100b4565b806301ff62ab146100b957806326987b60146100f95780632b52322c146101135780633d46b8191461014557806373df1612146101625780637fdd4b85146101c6575b600080fd5b6100e5600480360360408110156100cf57600080fd5b50803590602001356001600160a01b0316610371565b604080519115158252519081900360200190f35b61010161037a565b60408051918252519081900360200190f35b6100e56004803603606081101561012957600080fd5b508035906001600160a01b036020820135169060400135610380565b6101016004803603602081101561015b57600080fd5b5035610406565b61018e6004803603604081101561017857600080fd5b50803590602001356001600160a01b03166104b7565b604051808260a080838360005b838110156101b357818101518382015260200161019b565b5050505090500191505060405180910390f35b6100e5600480360360608110156101dc57600080fd5b508035906001600160a01b036020820135169060400135610538565b6100e56004803603602081101561020e57600080fd5b503561065e565b6102326004803603602081101561022b57600080fd5b5035610676565b005b6102606004803603604081101561024a57600080fd5b50803590602001356001600160a01b0316610699565b604051808060200180602001838103835285818151815260200191508051906020019060200280838360005b838110156102a457818101518382015260200161028c565b50505050905001838103825284818151815260200191508051906020019060200280838360005b838110156102e35781810151838201526020016102cb565b5050505090500194505050505060405180910390f35b6101016004803603602081101561030f57600080fd5b50356106e6565b6101016004803603602081101561032c57600080fd5b503561070d565b610101600480360360a081101561034957600080fd5b50803590602081013590604081013590606081013590608001356001600160a01b03166107b6565b60005b92915050565b60005481565b6000838152600460205260408120600781015443116103a35760009150506103ff565b60006103ae866106e6565b905060dc6103c98360070154436108a590919063ffffffff16565b11806103fa57506103ee6103dd87876108e7565b600384015490630f4240000361096d565b6103f8858361096d565b115b925050505b9392505050565b6000818060005411610458576040805162461bcd60e51b8152602060048201526016602482015275125b99195e081b9bdd081a5b9cdd185b9d1a585d195960521b604482015290519081900360640190fd5b6104618161065e565b6104a3576040805162461bcd60e51b815260206004820152600e60248201526d496e64657820696e61637469766560901b604482015290519081900360640190fd5b505060009081526002602052604090205490565b6104bf610c7f565b60008381526004602052604090206104d5610c7f565b6040518060a00160405280438152602001836007015481526020018360030154815260200161051e620f42406105188660020154426108a590919063ffffffff16565b9061096d565b815260200161052d87876108e7565b905295945050505050565b6000838152600460205260408120826105825760405162461bcd60e51b815260040180806020018281038252602a815260200180610d24602a913960400191505060405180910390fd5b60088101546001600160a01b031633146105cd5760405162461bcd60e51b815260040180806020018281038252602a815260200180610c9e602a913960400191505060405180910390fd5b6105d8858585610380565b15610653577faf52b86a5d24cd265704bc55c6247be8d17819d1a6e274288e67c876d0f89a3d84826001015461060d886106e6565b6003850154604080516001600160a01b0390951685526020850193909352838301919091526060830152519081900360800190a161064b85856109c6565b9150506103ff565b506000949350505050565b60008181526001602052604090205460ff165b919050565b6000908152600160209081526040808320805460ff191690556002909152812055565b606080808060006040519080825280602002602001820160405280156106c9578160200160208202803683370190505b506040805160008152602081019091529097909650945050505050565b600081815260046020526040812060028101546103ff90620f4240906105189042906108a5565b600080821161075b576040805162461bcd60e51b81526020600482015260156024820152744e756d6265722063616e6e6f74206265207a65726f60581b604482015290519081900360640190fd5b60008260011415610770576000915050610671565b5b60008381526003602052604090205461079057600192831c9201610771565b6000838152600360205260409020546103ff906107b083620f424061096d565b90610a43565b6000601e83116107f75760405162461bcd60e51b815260040180806020018281038252603b815260200180610cc8603b913960400191505060405180910390fd5b506000805481526004602081815260408084209092018890558254835281832060030187905582548352818320600501869055825483528183206006018590558254835281832060080180546001600160a01b0319166001600160a01b0386161790558254835281832043600190810160079092019190915583548452828420426002909101558354845290819052908220805460ff19168217905581549081019091555b95945050505050565b60006103ff83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610a9d565b60008281526004602090815260408083206007015481516bffffffffffffffffffffffff19606087901b168185015282518082036014018152603482018452805190850120605482018190529140607480830182905284518084039091018152609490920190935280519301929092209091906109638161070d565b9695505050505050565b60008261097c57506000610374565b8282028284828161098957fe5b04146103ff5760405162461bcd60e51b8152600401808060200182810382526021815260200180610d036021913960400191505060405180910390fd5b60008281526004602081815260408084206001810154855291829052832080546001600160a01b0319166001600160a01b0386161790559081015460038201546002830154610a2b929190610a1c9042906108a5565b84600601548560050154610b34565b6003820155610a3984610bb4565b5060019392505050565b6000828201838110156103ff576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b60008184841115610b2c5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610af1578181015183820152602001610ad9565b50505050905090810190601f168015610b1e5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b600082841015610b6957610b62610b58620f4240610b52888661096d565b90610bdd565b8690600101610a43565b905061089c565b82841115610baa576000610b91610b87620f4240610b52898761096d565b87906001016108a5565b9050868111610ba05786610ba2565b805b91505061089c565b5092949350505050565b600090815260046020526040902060018082018054820190554301600782015542600290910155565b60006103ff83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f00000000000081525060008183610c695760405162461bcd60e51b8152602060048201818152835160248401528351909283926044909101919085019080838360008315610af1578181015183820152602001610ad9565b506000838581610c7557fe5b0495945050505050565b6040518060a00160405280600590602082028036833750919291505056fe46756e6374696f6e2063616e206f6e6c792062652063616c6c656420627920706f7320616464726573734465736972656420647261772074696d6520696e74657276616c2068617320746f20626520626967676572207468616e203330207365636f6e6473536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f7743616c6c6572206d7573742068617665206174206c65617374206f6e65207374616b656420746f6b656ea2646970667358221220d0d95d1fc750e9f23c8be42c9b7244fb453a5c0f3bdb5e33fd772888c57a4a4264736f6c63430007010033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "canWin(uint256,address,uint256)": {
        "params": {
          "_index": "the index of the instance of lottery you want to interact with",
          "_user": "the address that is gonna get checked",
          "_weight": "number that will weight the random number, most likely will be the number of staked tokens"
        }
      },
      "claimRound(uint256,address,uint256)": {
        "params": {
          "_index": "the index of the instance of lottery you want to interact with",
          "_user": "address that will win the lottery",
          "_weight": "number that will weight the random number, most likely will be the number of staked tokens"
        }
      },
      "getMicrosecondsSinceLastDraw(uint256)": {
        "params": {
          "_index": "the index of the instance of lottery to be interact with"
        },
        "returns": {
          "_0": "microseconds passed since last draw started"
        }
      },
      "instantiate(uint256,uint256,uint256,uint256,address)": {
        "params": {
          "_desiredDrawTimeInterval": "how often we want to elect a winner",
          "_difficultyAdjustmentParameter": "how quickly the difficulty gets updated according to the difference between time passed and desired draw time interval.",
          "_initialDifficulty": "starting difficulty",
          "_minDifficulty": "lower bound for difficulty parameter",
          "_posManagerAddress": "address of ProofOfStake that will use this instance"
        }
      },
      "log2ApproxTimes1M(uint256)": {
        "params": {
          "_num": "number to take log2 * 1M of"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "canWin(uint256,address,uint256)": {
        "notice": "Check if address can win current round"
      },
      "claimRound(uint256,address,uint256)": {
        "notice": "Claim that _user won the round"
      },
      "getMicrosecondsSinceLastDraw(uint256)": {
        "notice": "Returns time since last draw started, in microseconds"
      },
      "instantiate(uint256,uint256,uint256,uint256,address)": {
        "notice": "Instantiates a Speed Bump structure"
      },
      "log2ApproxTimes1M(uint256)": {
        "notice": "Approximates log2 * 1M"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 934,
        "contract": "contracts/Lottery.sol:Lottery",
        "label": "currentIndex",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 938,
        "contract": "contracts/Lottery.sol:Lottery",
        "label": "active",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_uint256,t_bool)"
      },
      {
        "astId": 942,
        "contract": "contracts/Lottery.sol:Lottery",
        "label": "nonce",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_uint256,t_uint256)"
      },
      {
        "astId": 9,
        "contract": "contracts/Lottery.sol:Lottery",
        "label": "log2tableTimes1M",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_uint256,t_uint256)"
      },
      {
        "astId": 1602,
        "contract": "contracts/Lottery.sol:Lottery",
        "label": "instance",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_uint256,t_struct(LotteryCtx)1598_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_uint256,t_address)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_mapping(t_uint256,t_bool)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_uint256,t_struct(LotteryCtx)1598_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct Lottery.LotteryCtx)",
        "numberOfBytes": "32",
        "value": "t_struct(LotteryCtx)1598_storage"
      },
      "t_mapping(t_uint256,t_uint256)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_struct(LotteryCtx)1598_storage": {
        "encoding": "inplace",
        "label": "struct Lottery.LotteryCtx",
        "members": [
          {
            "astId": 1581,
            "contract": "contracts/Lottery.sol:Lottery",
            "label": "roundWinner",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_uint256,t_address)"
          },
          {
            "astId": 1583,
            "contract": "contracts/Lottery.sol:Lottery",
            "label": "roundCount",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 1585,
            "contract": "contracts/Lottery.sol:Lottery",
            "label": "currentDrawStartTime",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 1587,
            "contract": "contracts/Lottery.sol:Lottery",
            "label": "difficulty",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 1589,
            "contract": "contracts/Lottery.sol:Lottery",
            "label": "minDifficulty",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 1591,
            "contract": "contracts/Lottery.sol:Lottery",
            "label": "difficultyAdjustmentParameter",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          },
          {
            "astId": 1593,
            "contract": "contracts/Lottery.sol:Lottery",
            "label": "desiredDrawTimeInterval",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256"
          },
          {
            "astId": 1595,
            "contract": "contracts/Lottery.sol:Lottery",
            "label": "currentGoalBlockNumber",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256"
          },
          {
            "astId": 1597,
            "contract": "contracts/Lottery.sol:Lottery",
            "label": "posManagerAddress",
            "offset": 0,
            "slot": "8",
            "type": "t_address"
          }
        ],
        "numberOfBytes": "288"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  },
  "gasEstimates": {
    "creation": {
      "codeDepositCost": "691800",
      "executionCost": "2551526",
      "totalCost": "3243326"
    },
    "external": {
      "canWin(uint256,address,uint256)": "infinite",
      "claimRound(uint256,address,uint256)": "infinite",
      "currentIndex()": "1021",
      "deactivate(uint256)": "26158",
      "getMicrosecondsSinceLastDraw(uint256)": "infinite",
      "getNonce(uint256)": "2931",
      "getState(uint256,address)": "infinite",
      "getSubInstances(uint256,address)": "739",
      "instantiate(uint256,uint256,uint256,uint256,address)": "infinite",
      "isActive(uint256)": "1124",
      "isConcerned(uint256,address)": "288",
      "log2ApproxTimes1M(uint256)": "infinite"
    },
    "internal": {
      "_reset(uint256)": "60936",
      "_roundFinished(uint256,address)": "infinite",
      "getLogOfRandom(uint256,address)": "infinite",
      "getNewDifficulty(uint256,uint256,uint256,uint256,uint256)": "infinite"
    }
  }
}