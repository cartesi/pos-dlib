{
  "contractName": "BlockSelectorV2",
  "sourceName": "contracts/BlockSelectorV2.sol",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "producer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "blockNumber",
          "type": "uint32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "roundDuration",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "difficulty",
          "type": "uint256"
        }
      ],
      "name": "BlockProduced",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_weight",
          "type": "uint256"
        }
      ],
      "name": "canProduceBlock",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "currentIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "getBlockCount",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "getDifficulty",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "getDifficultyAdjustmentParameter",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "getMinDifficulty",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "getNonce",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "currentNonce",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "getSelectionBlockDuration",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "getState",
      "outputs": [
        {
          "internalType": "uint256[5]",
          "name": "_uintValues",
          "type": "uint256[5]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "getSubInstances",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "_addresses",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_indices",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "getTargetInterval",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_minDifficulty",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_initialDifficulty",
          "type": "uint256"
        },
        {
          "internalType": "uint32",
          "name": "_difficultyAdjustmentParameter",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "_targetInterval",
          "type": "uint32"
        },
        {
          "internalType": "address",
          "name": "_posManagerAddress",
          "type": "address"
        }
      ],
      "name": "instantiate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "isActive",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isConcerned",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_weight",
          "type": "uint256"
        }
      ],
      "name": "produceBlock",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x60806040526000805534801561001457600080fd5b50610ea3806100246000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c806382afd23b11610097578063c67ddc3811610066578063c67ddc381461025e578063d0aeade714610271578063da1c7140146102a1578063f9070044146102b457600080fd5b806382afd23b146101d757806383f6f5ca146101fa578063983ef7251461021a578063c526656c1461023d57600080fd5b80634e58fdca116100d35780634e58fdca1461014c5780635378014f1461019157806359dc826c146101a457806373df1612146101b757600080fd5b806301ff62ab146100fa57806326987b60146101225780633d46b81914610139575b600080fd5b61010d610108366004610bb4565b6102e4565b60405190151581526020015b60405180910390f35b61012b60005481565b604051908152602001610119565b61012b610147366004610be0565b6102ed565b61017c61015a366004610be0565b600090815260036020526040902060020154600160a01b900463ffffffff1690565b60405163ffffffff9091168152602001610119565b61010d61019f366004610bf9565b6103a2565b61010d6101b2366004610bf9565b6105a7565b6101ca6101c5366004610bb4565b610641565b6040516101199190610c2e565b61010d6101e5366004610be0565b60009081526001602052604090205460ff1690565b61012b610208366004610be0565b60009081526003602052604090205490565b61012b610228366004610be0565b60009081526003602052604090206001015490565b61025061024b366004610bb4565b6106bb565b604051610119929190610c5f565b61012b61026c366004610be0565b610708565b61017c61027f366004610be0565b600090815260036020526040902060020154600160e01b900463ffffffff1690565b61012b6102af366004610cf7565b61078a565b61017c6102c2366004610be0565b600090815260036020526040902060020154600160c01b900463ffffffff1690565b60005b92915050565b600081806000541161033f5760405162461bcd60e51b8152602060048201526016602482015275125b99195e081b9bdd081a5b9cdd185b9d1a585d195960521b60448201526064015b60405180910390fd5b60008181526001602052604090205460ff1661038e5760405162461bcd60e51b815260206004820152600e60248201526d496e64657820696e61637469766560901b6044820152606401610336565b505060009081526002602052604090205490565b60008381526003602081905260408220015484906103c79063ffffffff166001610d64565b63ffffffff1643101561042e5760405162461bcd60e51b815260206004820152602960248201527f476f616c20666f72206e657720626c6f636b206861736e74206265656e20646560448201526818da591959081e595d60ba1b6064820152608401610336565b6000858152600360205260409020836104955760405162461bcd60e51b8152602060048201526024808201527f43616c6c65722063616e27742068617665207a65726f207374616b656420746f6044820152636b656e7360e01b6064820152608401610336565b60028101546001600160a01b031633146105045760405162461bcd60e51b815260206004820152602a60248201527f46756e6374696f6e2063616e206f6e6c792062652063616c6c656420627920706044820152696f73206164647265737360b01b6064820152608401610336565b61050f8686866105a7565b1561059957846001600160a01b0316867f14aa79ee14fcd694c30b9c3f6d41247d2e0c87bfefec35a6864d124e8086467283600201601c9054906101000a900463ffffffff1661055e8a610708565b60018601546040805163ffffffff909416845260208401929092529082015260600160405180910390a361059186610870565b92505061059f565b60009250505b509392505050565b60008381526003602081905260408220908101546105cc9063ffffffff166001610d64565b63ffffffff1643116105e257600091505061063a565b60006105ed86610708565b90506105f986866108d9565b61060c90680de0b6b3a764000000610d8c565b826001015461061b9190610da3565b6106258286610da3565b6106349064e8d4a51000610da3565b11925050505b9392505050565b610649610b7a565b6000838152600360208181526040808420815160a081019092524382529283015492939290918201906106839063ffffffff166001610d64565b63ffffffff168152602001836001015481526020016106a187610708565b81526020016106b087876108d9565b905295945050505050565b606080808060006040519080825280602002602001820160405280156106eb578160200160208202803683370190505b506040805160008152602081019091529097909650945050505050565b6000818152600360208190526040822090810154829061072f9063ffffffff166001610d64565b63ffffffff169050438110610748575060009392505050565b60006107548243610d8c565b905061076261010082610dd8565b6000036107755750610100949350505050565b61078161010082610dd8565b95945050505050565b600080548152600360208181526040808420899055835484528084206001908101899055845485528185206002908101805463ffffffff60a01b1916600160a01b63ffffffff8c81169190910291909117909155865487528387208201805463ffffffff60c01b1916600160c01b8b8416021790558654875283872090910180546001600160a01b0319166001600160a01b03891617905585548652828620909401805463ffffffff1916439095169490941790935583548452908290528220805460ff191690911790558054818061086283610dec565b909155509695505050505050565b60008181526003602081905260408220805460018201549282015491926108c2926108a19063ffffffff1643610d8c565b600285015463ffffffff600160c01b8204811691600160a01b9004166109f6565b60018201556108d083610a94565b50600192915050565b600082815260036020819052604082200154819061090e906109029063ffffffff166001610d64565b63ffffffff1643610b07565b6040516bffffffffffffffffffffffff19606086901b1660208201529040915060009060340160408051601f198184030181528282528051602091820120908301819052908201849052915060009060600160408051808303601f1901815290829052805160209091012063c370ed0960e01b825260048201819052915073__$1cacf4970e0423274c39545237a099b14f$__9063c370ed0990602401602060405180830381865af41580156109c8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109ec9190610e05565b9695505050505050565b60008263ffffffff168463ffffffff1611610a4457610a1e620f424063ffffffff8416610e1e565b610a289086610da3565b610a33906001610e32565b610a3d9086610e32565b9050610781565b6000610a59620f424063ffffffff8516610e1e565b610a639087610da3565b610a6e906001610e32565b610a789087610d8c565b9050868111610a875786610a89565b805b979650505050505050565b6000818152600360205260409020600281018054600160e01b900463ffffffff1690601c610ac183610e4a565b91906101000a81548163ffffffff021916908363ffffffff16021790555050438160030160006101000a81548163ffffffff021916908363ffffffff1602179055505050565b600080610b148484610d8c565b90506000610b2461010083610e1e565b9050610b3261010083610dd8565b600003610b6457610100610b47600183610d8c565b610b519190610da3565b610b5b9086610e32565b925050506102e7565b610b7061010082610da3565b6107819086610e32565b6040518060a001604052806005906020820280368337509192915050565b80356001600160a01b0381168114610baf57600080fd5b919050565b60008060408385031215610bc757600080fd5b82359150610bd760208401610b98565b90509250929050565b600060208284031215610bf257600080fd5b5035919050565b600080600060608486031215610c0e57600080fd5b83359250610c1e60208501610b98565b9150604084013590509250925092565b60a08101818360005b6005811015610c56578151835260209283019290910190600101610c37565b50505092915050565b604080825283519082018190526000906020906060840190828701845b82811015610ca15781516001600160a01b031684529284019290840190600101610c7c565b5050508381038285015284518082528583019183019060005b81811015610cd657835183529284019291840191600101610cba565b5090979650505050505050565b803563ffffffff81168114610baf57600080fd5b600080600080600060a08688031215610d0f57600080fd5b8535945060208601359350610d2660408701610ce3565b9250610d3460608701610ce3565b9150610d4260808701610b98565b90509295509295909350565b634e487b7160e01b600052601160045260246000fd5b600063ffffffff808316818516808303821115610d8357610d83610d4e565b01949350505050565b600082821015610d9e57610d9e610d4e565b500390565b6000816000190483118215151615610dbd57610dbd610d4e565b500290565b634e487b7160e01b600052601260045260246000fd5b600082610de757610de7610dc2565b500690565b600060018201610dfe57610dfe610d4e565b5060010190565b600060208284031215610e1757600080fd5b5051919050565b600082610e2d57610e2d610dc2565b500490565b60008219821115610e4557610e45610d4e565b500190565b600063ffffffff808316818103610e6357610e63610d4e565b600101939250505056fea26469706673582212203af88e2d6079d1c70f08afe3ce69aa2735d6a24d38f2b8e178abe6c4d55ee22164736f6c634300080e0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100f55760003560e01c806382afd23b11610097578063c67ddc3811610066578063c67ddc381461025e578063d0aeade714610271578063da1c7140146102a1578063f9070044146102b457600080fd5b806382afd23b146101d757806383f6f5ca146101fa578063983ef7251461021a578063c526656c1461023d57600080fd5b80634e58fdca116100d35780634e58fdca1461014c5780635378014f1461019157806359dc826c146101a457806373df1612146101b757600080fd5b806301ff62ab146100fa57806326987b60146101225780633d46b81914610139575b600080fd5b61010d610108366004610bb4565b6102e4565b60405190151581526020015b60405180910390f35b61012b60005481565b604051908152602001610119565b61012b610147366004610be0565b6102ed565b61017c61015a366004610be0565b600090815260036020526040902060020154600160a01b900463ffffffff1690565b60405163ffffffff9091168152602001610119565b61010d61019f366004610bf9565b6103a2565b61010d6101b2366004610bf9565b6105a7565b6101ca6101c5366004610bb4565b610641565b6040516101199190610c2e565b61010d6101e5366004610be0565b60009081526001602052604090205460ff1690565b61012b610208366004610be0565b60009081526003602052604090205490565b61012b610228366004610be0565b60009081526003602052604090206001015490565b61025061024b366004610bb4565b6106bb565b604051610119929190610c5f565b61012b61026c366004610be0565b610708565b61017c61027f366004610be0565b600090815260036020526040902060020154600160e01b900463ffffffff1690565b61012b6102af366004610cf7565b61078a565b61017c6102c2366004610be0565b600090815260036020526040902060020154600160c01b900463ffffffff1690565b60005b92915050565b600081806000541161033f5760405162461bcd60e51b8152602060048201526016602482015275125b99195e081b9bdd081a5b9cdd185b9d1a585d195960521b60448201526064015b60405180910390fd5b60008181526001602052604090205460ff1661038e5760405162461bcd60e51b815260206004820152600e60248201526d496e64657820696e61637469766560901b6044820152606401610336565b505060009081526002602052604090205490565b60008381526003602081905260408220015484906103c79063ffffffff166001610d64565b63ffffffff1643101561042e5760405162461bcd60e51b815260206004820152602960248201527f476f616c20666f72206e657720626c6f636b206861736e74206265656e20646560448201526818da591959081e595d60ba1b6064820152608401610336565b6000858152600360205260409020836104955760405162461bcd60e51b8152602060048201526024808201527f43616c6c65722063616e27742068617665207a65726f207374616b656420746f6044820152636b656e7360e01b6064820152608401610336565b60028101546001600160a01b031633146105045760405162461bcd60e51b815260206004820152602a60248201527f46756e6374696f6e2063616e206f6e6c792062652063616c6c656420627920706044820152696f73206164647265737360b01b6064820152608401610336565b61050f8686866105a7565b1561059957846001600160a01b0316867f14aa79ee14fcd694c30b9c3f6d41247d2e0c87bfefec35a6864d124e8086467283600201601c9054906101000a900463ffffffff1661055e8a610708565b60018601546040805163ffffffff909416845260208401929092529082015260600160405180910390a361059186610870565b92505061059f565b60009250505b509392505050565b60008381526003602081905260408220908101546105cc9063ffffffff166001610d64565b63ffffffff1643116105e257600091505061063a565b60006105ed86610708565b90506105f986866108d9565b61060c90680de0b6b3a764000000610d8c565b826001015461061b9190610da3565b6106258286610da3565b6106349064e8d4a51000610da3565b11925050505b9392505050565b610649610b7a565b6000838152600360208181526040808420815160a081019092524382529283015492939290918201906106839063ffffffff166001610d64565b63ffffffff168152602001836001015481526020016106a187610708565b81526020016106b087876108d9565b905295945050505050565b606080808060006040519080825280602002602001820160405280156106eb578160200160208202803683370190505b506040805160008152602081019091529097909650945050505050565b6000818152600360208190526040822090810154829061072f9063ffffffff166001610d64565b63ffffffff169050438110610748575060009392505050565b60006107548243610d8c565b905061076261010082610dd8565b6000036107755750610100949350505050565b61078161010082610dd8565b95945050505050565b600080548152600360208181526040808420899055835484528084206001908101899055845485528185206002908101805463ffffffff60a01b1916600160a01b63ffffffff8c81169190910291909117909155865487528387208201805463ffffffff60c01b1916600160c01b8b8416021790558654875283872090910180546001600160a01b0319166001600160a01b03891617905585548652828620909401805463ffffffff1916439095169490941790935583548452908290528220805460ff191690911790558054818061086283610dec565b909155509695505050505050565b60008181526003602081905260408220805460018201549282015491926108c2926108a19063ffffffff1643610d8c565b600285015463ffffffff600160c01b8204811691600160a01b9004166109f6565b60018201556108d083610a94565b50600192915050565b600082815260036020819052604082200154819061090e906109029063ffffffff166001610d64565b63ffffffff1643610b07565b6040516bffffffffffffffffffffffff19606086901b1660208201529040915060009060340160408051601f198184030181528282528051602091820120908301819052908201849052915060009060600160408051808303601f1901815290829052805160209091012063c370ed0960e01b825260048201819052915073__$1cacf4970e0423274c39545237a099b14f$__9063c370ed0990602401602060405180830381865af41580156109c8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109ec9190610e05565b9695505050505050565b60008263ffffffff168463ffffffff1611610a4457610a1e620f424063ffffffff8416610e1e565b610a289086610da3565b610a33906001610e32565b610a3d9086610e32565b9050610781565b6000610a59620f424063ffffffff8516610e1e565b610a639087610da3565b610a6e906001610e32565b610a789087610d8c565b9050868111610a875786610a89565b805b979650505050505050565b6000818152600360205260409020600281018054600160e01b900463ffffffff1690601c610ac183610e4a565b91906101000a81548163ffffffff021916908363ffffffff16021790555050438160030160006101000a81548163ffffffff021916908363ffffffff1602179055505050565b600080610b148484610d8c565b90506000610b2461010083610e1e565b9050610b3261010083610dd8565b600003610b6457610100610b47600183610d8c565b610b519190610da3565b610b5b9086610e32565b925050506102e7565b610b7061010082610da3565b6107819086610e32565b6040518060a001604052806005906020820280368337509192915050565b80356001600160a01b0381168114610baf57600080fd5b919050565b60008060408385031215610bc757600080fd5b82359150610bd760208401610b98565b90509250929050565b600060208284031215610bf257600080fd5b5035919050565b600080600060608486031215610c0e57600080fd5b83359250610c1e60208501610b98565b9150604084013590509250925092565b60a08101818360005b6005811015610c56578151835260209283019290910190600101610c37565b50505092915050565b604080825283519082018190526000906020906060840190828701845b82811015610ca15781516001600160a01b031684529284019290840190600101610c7c565b5050508381038285015284518082528583019183019060005b81811015610cd657835183529284019291840191600101610cba565b5090979650505050505050565b803563ffffffff81168114610baf57600080fd5b600080600080600060a08688031215610d0f57600080fd5b8535945060208601359350610d2660408701610ce3565b9250610d3460608701610ce3565b9150610d4260808701610b98565b90509295509295909350565b634e487b7160e01b600052601160045260246000fd5b600063ffffffff808316818516808303821115610d8357610d83610d4e565b01949350505050565b600082821015610d9e57610d9e610d4e565b500390565b6000816000190483118215151615610dbd57610dbd610d4e565b500290565b634e487b7160e01b600052601260045260246000fd5b600082610de757610de7610dc2565b500690565b600060018201610dfe57610dfe610d4e565b5060010190565b600060208284031215610e1757600080fd5b5051919050565b600082610e2d57610e2d610dc2565b500490565b60008219821115610e4557610e45610d4e565b500190565b600063ffffffff808316818103610e6357610e63610d4e565b600101939250505056fea26469706673582212203af88e2d6079d1c70f08afe3ce69aa2735d6a24d38f2b8e178abe6c4d55ee22164736f6c634300080e0033",
  "linkReferences": {
    "@cartesi/util/contracts/UnrolledCordic.sol": {
      "UnrolledCordic": [
        {
          "length": 20,
          "start": 2482
        }
      ]
    }
  },
  "deployedLinkReferences": {
    "@cartesi/util/contracts/UnrolledCordic.sol": {
      "UnrolledCordic": [
        {
          "length": 20,
          "start": 2446
        }
      ]
    }
  },
  "devdoc": {
    "kind": "dev",
    "methods": {
      "canProduceBlock(uint256,address,uint256)": {
        "params": {
          "_index": "the index of the instance of block selector you want to interact with",
          "_user": "the address that is gonna get checked",
          "_weight": "number that will weight the random number, most likely will be the number of staked tokens"
        }
      },
      "getBlockCount(uint256)": {
        "params": {
          "_index": "the index of the instance of block selector to be interact with"
        },
        "returns": {
          "_0": "number of blocks"
        }
      },
      "getDifficulty(uint256)": {
        "params": {
          "_index": "the index of the instance of block selector to be interact with"
        },
        "returns": {
          "_0": "difficulty of current selection"
        }
      },
      "getDifficultyAdjustmentParameter(uint256)": {
        "params": {
          "_index": "the index of the instance of block selector to be interact with"
        },
        "returns": {
          "_0": "difficulty adjustment parameter"
        }
      },
      "getMinDifficulty(uint256)": {
        "params": {
          "_index": "the index of the instance of block selector to be interact with"
        },
        "returns": {
          "_0": "min difficulty of instance"
        }
      },
      "getSelectionBlockDuration(uint256)": {
        "details": "block duration resets every 256 blocks",
        "params": {
          "_index": "the index of the instance of block selector to be interact with"
        },
        "returns": {
          "_0": "number of etheereum blocks passed since last selection started"
        }
      },
      "getTargetInterval(uint256)": {
        "params": {
          "_index": "the index of the instance of block selector to be interact with"
        },
        "returns": {
          "_0": "target interval"
        }
      },
      "instantiate(uint256,uint256,uint32,uint32,address)": {
        "params": {
          "_difficultyAdjustmentParameter": "how quickly the difficulty gets updated according to the difference between time passed and target interval.",
          "_initialDifficulty": "starting difficulty",
          "_minDifficulty": "lower bound for difficulty parameter",
          "_posManagerAddress": "address of ProofOfStake that will use this instance",
          "_targetInterval": "how often we want produce noether blocks, in ethereum blocks"
        }
      },
      "produceBlock(uint256,address,uint256)": {
        "params": {
          "_index": "the index of the instance of block selector you want to interact with",
          "_user": "address that has the right to produce block",
          "_weight": "number that will weight the random number, will be the number of staked tokens"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "canProduceBlock(uint256,address,uint256)": {
        "notice": "Check if address is allowed to produce block"
      },
      "getBlockCount(uint256)": {
        "notice": "Returns the number of blocks"
      },
      "getDifficulty(uint256)": {
        "notice": "Returns current difficulty"
      },
      "getDifficultyAdjustmentParameter(uint256)": {
        "notice": "Returns difficulty adjustment parameter"
      },
      "getMinDifficulty(uint256)": {
        "notice": "Returns min difficulty"
      },
      "getSelectionBlockDuration(uint256)": {
        "notice": "Returns time since last selection started, in ethereum blocks"
      },
      "getTargetInterval(uint256)": {
        "notice": "Returns target interval"
      },
      "instantiate(uint256,uint256,uint32,uint32,address)": {
        "notice": "Instantiates a BlockSelector structure"
      },
      "produceBlock(uint256,address,uint256)": {
        "notice": "Produces a block"
      }
    },
    "version": 1
  },
  "evm": {
    "gasEstimates": {
      "creation": {
        "codeDepositCost": "749400",
        "executionCost": "5792",
        "totalCost": "755192"
      },
      "external": {
        "canProduceBlock(uint256,address,uint256)": "infinite",
        "currentIndex()": "2341",
        "getBlockCount(uint256)": "2520",
        "getDifficulty(uint256)": "2511",
        "getDifficultyAdjustmentParameter(uint256)": "2499",
        "getMinDifficulty(uint256)": "2483",
        "getNonce(uint256)": "6840",
        "getSelectionBlockDuration(uint256)": "infinite",
        "getState(uint256,address)": "infinite",
        "getSubInstances(uint256,address)": "859",
        "getTargetInterval(uint256)": "2564",
        "instantiate(uint256,uint256,uint32,uint32,address)": "infinite",
        "isActive(uint256)": "2462",
        "isConcerned(uint256,address)": "418",
        "produceBlock(uint256,address,uint256)": "infinite"
      },
      "internal": {
        "_blockProduced(uint256)": "infinite",
        "_reset(uint256)": "50900",
        "getLogOfRandom(uint256,address)": "infinite",
        "getNewDifficulty(uint256,uint256,uint32,uint32,uint32)": "407",
        "getSeed(uint256,uint256)": "infinite"
      }
    },
    "methodIdentifiers": {
      "canProduceBlock(uint256,address,uint256)": "59dc826c",
      "currentIndex()": "26987b60",
      "getBlockCount(uint256)": "d0aeade7",
      "getDifficulty(uint256)": "983ef725",
      "getDifficultyAdjustmentParameter(uint256)": "4e58fdca",
      "getMinDifficulty(uint256)": "83f6f5ca",
      "getNonce(uint256)": "3d46b819",
      "getSelectionBlockDuration(uint256)": "c67ddc38",
      "getState(uint256,address)": "73df1612",
      "getSubInstances(uint256,address)": "c526656c",
      "getTargetInterval(uint256)": "f9070044",
      "instantiate(uint256,uint256,uint32,uint32,address)": "da1c7140",
      "isActive(uint256)": "82afd23b",
      "isConcerned(uint256,address)": "01ff62ab",
      "produceBlock(uint256,address,uint256)": "5378014f"
    }
  }
}